{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Robson Barros\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContex.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../Challenges.json';\nexport const ChallengContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperince\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallegesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n\n  function leveup() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengContext.Provider, {\n    value: {\n      level: 1,\n      currentExperience,\n      challengesCompleted,\n      leveup,\n      startNewChallenge,\n      activeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Robson Barros/OneDrive/Área de Trabalho/moveit-next/src/contexts/ChallengeContex.tsx"],"names":["createContext","useState","challenges","ChallengContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperince","challengesCompleted","setChallegesCompleted","activeChallenge","setActiveChallenge","leveup","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAqBA,OAAO,MAAMC,eAAe,gBAAGH,aAAa,CAAC,EAAD,CAArC;AAEP,OAAO,SAASI,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA2CR,QAAQ,CAAC,CAAD,CAAzD;AACA,QAAM;AAAA,OAAES,mBAAF;AAAA,OAAuBC;AAAvB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASa,MAAT,GAAkB;AAChBP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASS,iBAAT,GAA6B;AAC1B,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,UAAU,CAACkB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGnB,UAAU,CAACc,oBAAD,CAA5B;AAEAH,IAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AACF;;AAED,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACA,IAAA,KAAK,EAAE;AACFf,MAAAA,KAAK,EAAE,CADL;AAEFE,MAAAA,iBAFE;AAGFE,MAAAA,mBAHE;AAIFI,MAAAA,MAJE;AAKFC,MAAAA,iBALE;AAMFH,MAAAA;AANE,KADP;AAAA,cAUMP;AAVN;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\r\nimport challenges from '../../Challenges.json';  \r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContexData {\r\n     level: number;\r\n     currentExperience: number;\r\n     challengesCompleted: number;\r\n     activeChallenge:Challenge;\r\n     leveup: () => void;\r\n     startNewChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengContext = createContext({} as ChallengesContexData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperince] = useState(0);\r\n    const [ challengesCompleted, setChallegesCompleted] = useState(0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    function leveup() {\r\n      setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n       const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n       const challenge = challenges[randomChallengeIndex];\r\n\r\n       setActiveChallenge(challenge)\r\n    }\r\n\r\n    return (\r\n        <ChallengContext.Provider \r\n        value={{\r\n             level: 1,\r\n             currentExperience,\r\n             challengesCompleted, \r\n             leveup,\r\n             startNewChallenge, \r\n             activeChallenge,\r\n             }}\r\n             >\r\n            { children }\r\n        </ChallengContext.Provider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}