{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Robson Barros/OneDrive/\\xC1rea de Trabalho/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Robson Barros\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { ChallengContext } from '../contexts/ChallengeContex';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(ChallengContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLef = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsteLef = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(25 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsteLef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive, \" \"),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um cicloar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"mj5/cnN4jENLd9Ysf8U5sf/QRNY=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/Robson Barros/OneDrive/Área de Trabalho/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","useContext","ChallengContext","styles","countdownTimeout","Countdown","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLef","minuteRight","secondsteLef","secondsRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { time } from 'console';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { ChallengContext } from '../contexts/ChallengeContex';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n    const { startNewChallenge } = useContext(ChallengContext);\r\n\r\n    const [time, setTime] = useState(25 * 60);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    \r\n    \r\n    const [minuteLef, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondsteLef, secondsRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    function startCountdown() {\r\n        setIsActive(true);\r\n    }\r\n\r\n    function resetCountdown () {\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(25 * 60);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isActive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }else if (isActive && time == 0) {\r\n            setHasFinished(true);\r\n            setIsActive(false);\r\n            startNewChallenge();\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLef}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondsteLef}</span>\r\n                    <span>{secondsRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            { hasFinished ? (\r\n                 <button \r\n                    disabled\r\n                    className={styles.countdownButton}  \r\n              >\r\n                  Ciclo encerrado \r\n             </button>    \r\n            ) : (\r\n                <>\r\n                    \r\n            { isActive ? (\r\n             <button \r\n                type=\"button\"\r\n                className={ `${styles.countdownButton} ${styles.countdownButtonActive} ` }\r\n                onClick={resetCountdown}\r\n             >\r\n                 Abandonar ciclo\r\n            </button>    \r\n         ) : (\r\n             <button\r\n                type=\"button\"\r\n                className={styles.countdownButton}\r\n                onClick={startCountdown}\r\n             >\r\n                Iniciar um cicloar \r\n            </button>\r\n            )}\r\n                </>\r\n            )}\r\n\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}