{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Robson Barros\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContex.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../Challenges.json';\nexport var ChallengContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperince = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallegesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var expirenceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function leveUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= expirenceToNextLevel) {\n      finalExperience = finalExperience - expirenceToNextLevel;\n      leveUp();\n    }\n\n    setCurrentExperince(finalExperience);\n    setActiveChallenge(null);\n    setChallegesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      leveUp: leveUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      expirenceToNextLevel: expirenceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"ImuqNIIBWbNvt4MMd686hWQTVZM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/Robson Barros/OneDrive/Área de Trabalho/moveit-next/src/contexts/ChallengeContex.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperince","challengesCompleted","setChallegesCompleted","activeChallenge","setActiveChallenge","expirenceToNextLevel","Math","pow","Notification","requestPermission","set","String","leveUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../Challenges.json';  \r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContexData {\r\n     level: number;\r\n     currentExperience: number;\r\n     challengesCompleted: number;\r\n     activeChallenge:Challenge;\r\n     expirenceToNextLevel:number\r\n     leveUp: () => void;\r\n     startNewChallenge: () => void;\r\n     resetChallenge: () => void;\r\n     completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengContext = createContext({} as ChallengesContexData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperince] = useState(0);\r\n    const [ challengesCompleted, setChallegesCompleted] = useState(0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    const expirenceToNextLevel = Math.pow((level + 1 )* 4, 2)\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n    }, [level, currentExperience, challengesCompleted])\r\n\r\n    function leveUp() {\r\n      setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n       const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n       const challenge = challenges[randomChallengeIndex];\r\n\r\n       setActiveChallenge(challenge)\r\n\r\n       new Audio('/notification.mp3').play();\r\n\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio', {\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if ( finalExperience >= expirenceToNextLevel) {\r\n            finalExperience = finalExperience - expirenceToNextLevel;\r\n            leveUp(); \r\n        }\r\n\r\n        setCurrentExperince(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallegesCompleted(challengesCompleted + 1);\r\n    }\r\n\r\n    return (\r\n        <ChallengContext.Provider \r\n        value={{\r\n             level,\r\n             currentExperience,\r\n             challengesCompleted, \r\n             leveUp,\r\n             startNewChallenge, \r\n             activeChallenge,\r\n             resetChallenge,\r\n             expirenceToNextLevel,\r\n             completeChallenge,\r\n             }}\r\n             >\r\n            { children }\r\n        </ChallengContext.Provider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}