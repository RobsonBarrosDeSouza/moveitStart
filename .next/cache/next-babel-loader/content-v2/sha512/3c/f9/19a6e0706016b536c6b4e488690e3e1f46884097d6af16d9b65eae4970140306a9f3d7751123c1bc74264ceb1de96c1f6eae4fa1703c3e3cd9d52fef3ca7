{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Robson Barros\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContex.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../Challenges.json';\nexport var ChallengContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperince = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallegesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var expirenceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function leveUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= expirenceToNextLevel) {\n      finalExperience = finalExperience - expirenceToNextLevel;\n      leveUp();\n    }\n\n    setCurrentExperince(finalExperience);\n    setActiveChallenge(null);\n    setChallegesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      leveUp: leveUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      expirenceToNextLevel: expirenceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"Z9thjePoMt9HWvI95btHj1YRlZM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/Robson Barros/OneDrive/Área de Trabalho/moveit-next/src/contexts/ChallengeContex.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperince","challengesCompleted","setChallegesCompleted","activeChallenge","setActiveChallenge","expirenceToNextLevel","Math","pow","Notification","requestPermission","leveUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,eAAe,gBAAGJ,aAAa,CAAC,EAAD,CAArC;AAEP,OAAO,SAASK,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC5CL,QAAQ,CAAC,CAAD,CADoC;AAAA,MAC/DM,KAD+D;AAAA,MACxDC,QADwD;;AAAA,mBAErBP,QAAQ,CAAC,CAAD,CAFa;AAAA,MAE/DQ,iBAF+D;AAAA,MAE5CC,mBAF4C;;AAAA,mBAGhBT,QAAQ,CAAC,CAAD,CAHQ;AAAA,MAG9DU,mBAH8D;AAAA,MAGzCC,qBAHyC;;AAAA,mBAKxBX,QAAQ,CAAC,IAAD,CALgB;AAAA,MAK/DY,eAL+D;AAAA,MAK9CC,kBAL8C;;AAOtE,MAAMC,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA7B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,MAAT,GAAkB;AAChBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,iBAAT,GAA6B;AAC1B,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEC,QAAIV,YAAY,CAACW,UAAb,KAA4B,SAAhC,EAA2C;AACvC,UAAIX,YAAJ,CAAiB,cAAjB,EAAiC;AAC7BY,QAAAA,IAAI,oBAAaJ,SAAS,CAACK,MAAvB;AADyB,OAAjC;AAGH;AACJ;;AAED,WAASC,cAAT,GAA0B;AACtBlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASmB,iBAAT,GAA6B;AACzB,QAAI,CAACpB,eAAL,EAAsB;AAClB;AACH;;AAHwB,QAKjBkB,MALiB,GAKNlB,eALM,CAKjBkB,MALiB;AAOzB,QAAIG,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAKG,eAAe,IAAInB,oBAAxB,EAA8C;AAC1CmB,MAAAA,eAAe,GAAGA,eAAe,GAAGnB,oBAApC;AACAK,MAAAA,MAAM;AACT;;AAEDV,IAAAA,mBAAmB,CAACwB,eAAD,CAAnB;AACApB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,qBAAqB,CAACD,mBAAmB,GAAG,CAAvB,CAArB;AACH;;AAED,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACA,IAAA,KAAK,EAAE;AACFJ,MAAAA,KAAK,EAALA,KADE;AAEFE,MAAAA,iBAAiB,EAAjBA,iBAFE;AAGFE,MAAAA,mBAAmB,EAAnBA,mBAHE;AAIFS,MAAAA,MAAM,EAANA,MAJE;AAKFC,MAAAA,iBAAiB,EAAjBA,iBALE;AAMFR,MAAAA,eAAe,EAAfA,eANE;AAOFmB,MAAAA,cAAc,EAAdA,cAPE;AAQFjB,MAAAA,oBAAoB,EAApBA,oBARE;AASFkB,MAAAA,iBAAiB,EAAjBA;AATE,KADP;AAAA,cAaM3B;AAbN;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAxEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport challenges from '../../Challenges.json';  \r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContexData {\r\n     level: number;\r\n     currentExperience: number;\r\n     challengesCompleted: number;\r\n     activeChallenge:Challenge;\r\n     expirenceToNextLevel:number\r\n     leveUp: () => void;\r\n     startNewChallenge: () => void;\r\n     resetChallenge: () => void;\r\n     completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengContext = createContext({} as ChallengesContexData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperince] = useState(0);\r\n    const [ challengesCompleted, setChallegesCompleted] = useState(0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    const expirenceToNextLevel = Math.pow((level + 1 )* 4, 2)\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    function leveUp() {\r\n      setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n       const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n       const challenge = challenges[randomChallengeIndex];\r\n\r\n       setActiveChallenge(challenge)\r\n\r\n       new Audio('/notification.mp3').play();\r\n\r\n        if (Notification.permission === 'granted') {\r\n            new Notification('Novo desafio', {\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if ( finalExperience >= expirenceToNextLevel) {\r\n            finalExperience = finalExperience - expirenceToNextLevel;\r\n            leveUp(); \r\n        }\r\n\r\n        setCurrentExperince(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallegesCompleted(challengesCompleted + 1);\r\n    }\r\n\r\n    return (\r\n        <ChallengContext.Provider \r\n        value={{\r\n             level,\r\n             currentExperience,\r\n             challengesCompleted, \r\n             leveUp,\r\n             startNewChallenge, \r\n             activeChallenge,\r\n             resetChallenge,\r\n             expirenceToNextLevel,\r\n             completeChallenge,\r\n             }}\r\n             >\r\n            { children }\r\n        </ChallengContext.Provider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}