{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Robson Barros\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from 'react';\nimport { CountdownContex } from '../contexts/CountdownContex';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContex);\n  const [minuteLef, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondsteLef, secondsRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsteLef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive} `,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um cicloar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Robson Barros/OneDrive/√Årea de Trabalho/moveit-next/src/components/Countdown.tsx"],"names":["useContext","CountdownContex","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLef","minuteRight","String","padStart","split","secondsteLef","secondsRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAAUA,UAAV,QAA4B,OAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AAAEC,IAAAA,OAAF;AACFC,IAAAA,OADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,cAJE;AAKFC,IAAAA;AALE,MAMFT,UAAU,CAACC,eAAD,CANd;AASA,QAAM,CAACS,SAAD,EAAYC,WAAZ,IAA2BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAjC;AACA,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAArC;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaMV,WAAW,gBACR;AACG,MAAA,QAAQ,MADX;AAEG,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAQT;AAAA,gBAEFX,QAAQ,gBACT;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,SAAS,EAAI,GAAEL,MAAM,CAACgB,eAAgB,IAAGhB,MAAM,CAACiB,qBAAsB,GAFzE;AAGG,QAAA,OAAO,EAAEV,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,SAAS,EAAEP,MAAM,CAACgB,eAFrB;AAGG,QAAA,OAAO,EAAEV,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXG,qBArBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH","sourcesContent":["import {  useContext } from 'react';\r\nimport { CountdownContex } from '../contexts/CountdownContex';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\n\r\n\r\nexport function Countdown() {\r\n    const { minutes, \r\n        seconds, \r\n        hasFinished, \r\n        isActive, \r\n        startCountdown, \r\n        resetCountdown\r\n    } = useContext(CountdownContex) \r\n    \r\n    \r\n    const [minuteLef, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondsteLef, secondsRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLef}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondsteLef}</span>\r\n                    <span>{secondsRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            { hasFinished ? (\r\n                 <button \r\n                    disabled\r\n                    className={styles.countdownButton}  \r\n              >\r\n                  Ciclo encerrado \r\n             </button>    \r\n            ) : (\r\n                <>\r\n                    \r\n            { isActive ? (\r\n             <button \r\n                type=\"button\"\r\n                className={ `${styles.countdownButton} ${styles.countdownButtonActive} ` }\r\n                onClick={resetCountdown}\r\n             >\r\n                 Abandonar ciclo\r\n            </button>    \r\n         ) : (\r\n             <button\r\n                type=\"button\"\r\n                className={styles.countdownButton}\r\n                onClick={startCountdown}\r\n             >\r\n                Iniciar um cicloar \r\n            </button>\r\n            )}\r\n                </>\r\n            )}\r\n\r\n            \r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}